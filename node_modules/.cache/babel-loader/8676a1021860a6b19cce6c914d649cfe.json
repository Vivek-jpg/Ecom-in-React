{"ast":null,"code":"import{Response}from\"miragejs\";/**\n * All the routes related to Product are present here.\n * These are Publicly accessible routes.\n * */ /**\n * This handler handles gets all products in the db.\n * send GET Request at /api/products\n * */export var getAllProductsHandler=function getAllProductsHandler(){return new Response(200,{},{products:this.db.products});};/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/user/products/:productId\n * */export var getProductHandler=function getProductHandler(schema,request){var productId=request.params.productId;try{var product=schema.products.findBy({_id:productId});return new Response(200,{},{product:product});}catch(error){return new Response(500,{},{error:error});}};","map":{"version":3,"sources":["F:/website 2020/Ecom-in-React/src/backend/controllers/ProductController.js"],"names":["Response","getAllProductsHandler","products","db","getProductHandler","schema","request","productId","params","product","findBy","_id","error"],"mappings":"AAAA,OAASA,QAAT,KAAyB,UAAzB,CAEA;AACA;AACA;AACA,K,CAEA;AACA;AACA;AACA,KAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAY,CAC/C,MAAO,IAAID,CAAAA,QAAJ,CAAa,GAAb,CAAkB,EAAlB,CAAsB,CAAEE,QAAQ,CAAE,KAAKC,EAAL,CAAQD,QAApB,CAAtB,CAAP,CACD,CAFM,CAIP;AACA;AACA;AACA,KAEA,MAAO,IAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAUC,MAAV,CAAkBC,OAAlB,CAA2B,CAC1D,GAAMC,CAAAA,SAAS,CAAGD,OAAO,CAACE,MAAR,CAAeD,SAAjC,CACA,GAAI,CACF,GAAME,CAAAA,OAAO,CAAGJ,MAAM,CAACH,QAAP,CAAgBQ,MAAhB,CAAuB,CAAEC,GAAG,CAAEJ,SAAP,CAAvB,CAAhB,CACA,MAAO,IAAIP,CAAAA,QAAJ,CAAa,GAAb,CAAkB,EAAlB,CAAsB,CAAES,OAAO,CAAPA,OAAF,CAAtB,CAAP,CACD,CAAC,MAAOG,KAAP,CAAc,CACd,MAAO,IAAIZ,CAAAA,QAAJ,CACL,GADK,CAEL,EAFK,CAGL,CACEY,KAAK,CAALA,KADF,CAHK,CAAP,CAOD,CACF,CAdM","sourcesContent":["import { Response } from \"miragejs\";\n\n/**\n * All the routes related to Product are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/products\n * */\n\nexport const getAllProductsHandler = function () {\n  return new Response(200, {}, { products: this.db.products });\n};\n\n/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/user/products/:productId\n * */\n\nexport const getProductHandler = function (schema, request) {\n  const productId = request.params.productId;\n  try {\n    const product = schema.products.findBy({ _id: productId });\n    return new Response(200, {}, { product });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}