{"ast":null,"code":"import _objectSpread from\"F:/website 2020/Ecom-in-React/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Server,Model,RestSerializer}from\"miragejs\";import{loginHandler,signupHandler}from\"./backend/controllers/AuthController\";import{addItemToCartHandler,getCartItemsHandler,removeItemFromCartHandler,updateCartItemHandler}from\"./backend/controllers/CartController\";import{getAllCategoriesHandler,getCategoryHandler}from\"./backend/controllers/CategoryController\";import{getAllProductsHandler,getProductHandler}from\"./backend/controllers/ProductController\";import{addItemToWishlistHandler,getWishlistItemsHandler,removeItemFromWishlistHandler}from\"./backend/controllers/WishlistController\";import{categories}from\"./backend/db/categories\";import{products}from\"./backend/db/products\";import{users}from\"./backend/db/users\";export function makeServer(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref$environment=_ref.environment,environment=_ref$environment===void 0?\"development\":_ref$environment;return new Server({serializers:{application:RestSerializer},environment:environment,models:{product:Model,category:Model,user:Model,cart:Model,wishlist:Model},// Runs on the start of the server\nseeds:function seeds(server){// disballing console logs from Mirage\nserver.logging=false;products.forEach(function(item){server.create(\"product\",_objectSpread({},item));});users.forEach(function(item){return server.create(\"user\",_objectSpread(_objectSpread({},item),{},{cart:[],wishlist:[]}));});categories.forEach(function(item){return server.create(\"category\",_objectSpread({},item));});},routes:function routes(){this.namespace=\"api\";// auth routes (public)\nthis.post(\"/auth/signup\",signupHandler.bind(this));this.post(\"/auth/login\",loginHandler.bind(this));// products routes (public)\nthis.get(\"/products\",getAllProductsHandler.bind(this));this.get(\"/products/:productId\",getProductHandler.bind(this));// categories routes (public)\nthis.get(\"/categories\",getAllCategoriesHandler.bind(this));this.get(\"/categories/:categoryId\",getCategoryHandler.bind(this));// cart routes (private)\nthis.get(\"/user/cart\",getCartItemsHandler.bind(this));this.post(\"/user/cart\",addItemToCartHandler.bind(this));this.post(\"/user/cart/:productId\",updateCartItemHandler.bind(this));this.delete(\"/user/cart/:productId\",removeItemFromCartHandler.bind(this));// wishlist routes (private)\nthis.get(\"/user/wishlist\",getWishlistItemsHandler.bind(this));this.post(\"/user/wishlist\",addItemToWishlistHandler.bind(this));this.delete(\"/user/wishlist/:productId\",removeItemFromWishlistHandler.bind(this));}});}","map":{"version":3,"sources":["F:/website 2020/Ecom-in-React/src/server.js"],"names":["Server","Model","RestSerializer","loginHandler","signupHandler","addItemToCartHandler","getCartItemsHandler","removeItemFromCartHandler","updateCartItemHandler","getAllCategoriesHandler","getCategoryHandler","getAllProductsHandler","getProductHandler","addItemToWishlistHandler","getWishlistItemsHandler","removeItemFromWishlistHandler","categories","products","users","makeServer","environment","serializers","application","models","product","category","user","cart","wishlist","seeds","server","logging","forEach","item","create","routes","namespace","post","bind","get","delete"],"mappings":"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","sourcesContent":["import { Server, Model, RestSerializer } from \"miragejs\";\nimport {\n  loginHandler,\n  signupHandler,\n} from \"./backend/controllers/AuthController\";\nimport {\n  addItemToCartHandler,\n  getCartItemsHandler,\n  removeItemFromCartHandler,\n  updateCartItemHandler,\n} from \"./backend/controllers/CartController\";\nimport {\n  getAllCategoriesHandler,\n  getCategoryHandler,\n} from \"./backend/controllers/CategoryController\";\nimport {\n  getAllProductsHandler,\n  getProductHandler,\n} from \"./backend/controllers/ProductController\";\nimport {\n  addItemToWishlistHandler,\n  getWishlistItemsHandler,\n  removeItemFromWishlistHandler,\n} from \"./backend/controllers/WishlistController\";\nimport { categories } from \"./backend/db/categories\";\nimport { products } from \"./backend/db/products\";\nimport { users } from \"./backend/db/users\";\n\nexport function makeServer({ environment = \"development\" } = {}) {\n  return new Server({\n    serializers: {\n      application: RestSerializer,\n    },\n    environment,\n    models: {\n      product: Model,\n      category: Model,\n      user: Model,\n      cart: Model,\n      wishlist: Model,\n    },\n\n    // Runs on the start of the server\n    seeds(server) {\n      // disballing console logs from Mirage\n      server.logging = false;\n      products.forEach((item) => {\n        server.create(\"product\", { ...item });\n      });\n\n      users.forEach((item) =>\n        server.create(\"user\", { ...item, cart: [], wishlist: [] })\n      );\n\n      categories.forEach((item) => server.create(\"category\", { ...item }));\n    },\n\n    routes() {\n      this.namespace = \"api\";\n      // auth routes (public)\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this));\n\n      // products routes (public)\n      this.get(\"/products\", getAllProductsHandler.bind(this));\n      this.get(\"/products/:productId\", getProductHandler.bind(this));\n\n      // categories routes (public)\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\n\n      // cart routes (private)\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\n      this.delete(\n        \"/user/cart/:productId\",\n        removeItemFromCartHandler.bind(this)\n      );\n\n      // wishlist routes (private)\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\n      this.delete(\n        \"/user/wishlist/:productId\",\n        removeItemFromWishlistHandler.bind(this)\n      );\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}